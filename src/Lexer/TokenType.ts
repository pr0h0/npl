enum TokenType {
  // Bracket
  OPEN_BRACKET = "OPEN_BRACKET",
  CLOSE_BRACKET = "CLOSE_BRACKET",
  OPEN_PAREN = "OPEN_PAREN",
  CLOSE_PAREN = "CLOSE_PAREN",
  OPEN_BRACE = "OPEN_BRACE",
  CLOSE_BRACE = "CLOSE_BRACE",

  // Operator
  PLUS = "PLUS",
  MINUS = "MINUS",
  STAR = "STAR",
  SLASH = "SLASH",
  MODULO = "MODULO",
  ASSIGN = "ASSIGN",
  EQUAL = "EQUAL",
  NOT_EQUAL = "NOT_EQUAL",
  GREATER = "GREATER",
  GREATER_EQUAL = "GREATER_EQUAL",
  LESS = "LESS",
  LESS_EQUAL = "LESS_EQUAL",
  AND = "AND",
  OR = "OR",
  NOT = "NOT",

  PLUS_ASSIGN = "PLUS_EQUAL",
  MINUS_ASSIGN = "MINUS_EQUAL",
  STAR_ASSIGN = "STAR_ASSIGN",
  SLASH_ASSIGN = "SLASH_ASSIGN",
  MODULO_ASSIGN = "MODULO_ASSIGN",

  INCREMENT = "INCREMENT",
  DECREMENT = "DECREMENT",
  EXPONENT = "EXPONENT",

  // Keyword
  IF = "IF",
  ELSE = "ELSE",
  WHILE = "WHILE",
  FOR = "FOR",
  FUNCTION = "FUNCTION",
  RETURN = "RETURN",
  VAR = "VAR",
  CONST = "CONST",
  TRUE = "TRUE",
  FALSE = "FALSE",
  NULL = "NULL",

  // Literal
  IDENTIFIER = "IDENTIFIER",
  NUMBER_LITERAL = "NUMBER_LITERAL",
  STRING_LITERAL = "STRING_LITERAL",
  BOOLEAN_LITERAL = "BOOLEAN_LITERAL",
  NULL_LITERAL = "NULL_LITERAL",

  // Other
  COMMA = "COMMA",
  DOT = "DOT",
  COLON = "COLON",
  SEMICOLON = "SEMICOLON",
  EOF = "EOF",
  DELETE = "DELETE"
}

export default TokenType;
